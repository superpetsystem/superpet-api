{
	"info": {
		"_postman_id": "auth-collection-001",
		"name": "SuperPet - Authentication",
		"description": "Complete authentication flow with JWT tokens and password management.\n\n**Features:**\n- User registration with automatic employee creation (OWNER role)\n- Login with JWT token generation\n- Profile access\n- Password change (authenticated)\n- Password reset flow (forgot + reset)\n- Refresh token\n- Token auto-save in collection variables",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 201) {",
							"    const response = pm.response.json();",
							"    pm.collectionVariables.set('access_token', 'Bearer ' + response.access_token);",
							"    pm.collectionVariables.set('user_id', response.user.id);",
							"    console.log('✅ Token saved automatically!');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"test@superpet.com\",\n  \"name\": \"Test User\",\n  \"password\": \"senha123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				},
				"description": "Register new user. Automatically creates Employee with OWNER role.\n\n**Response:** Returns access_token and user data\n\n**Possible Errors:**\n- 400: Email already exists\n- 400: Validation error (invalid email, password < 6 chars)\n- 400: EMPLOYEE_LIMIT_EXCEEDED (plan limit reached)"
			},
			"response": [
				{
					"name": "201 - Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@superpet.com\",\n  \"name\": \"Test User\",\n  \"password\": \"senha123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"test@superpet.com\",\n    \"name\": \"Test User\",\n    \"organizationId\": \"uuid\"\n  }\n}"
				},
				{
					"name": "400 - Email Already Exists",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"existing@superpet.com\",\n  \"name\": \"Test\",\n  \"password\": \"senha123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 400,\n  \"message\": \"Email already exists\",\n  \"error\": \"Bad Request\"\n}"
				},
				{
					"name": "400 - Validation Error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"invalid-email\",\n  \"name\": \"\",\n  \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 400,\n  \"message\": [\n    \"email must be an email\",\n    \"name should not be empty\",\n    \"password must be longer than or equal to 6 characters\"\n  ],\n  \"error\": \"Bad Request\"\n}"
				},
				{
					"name": "400 - Plan Limit Exceeded",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"new@superpet.com\",\n  \"name\": \"New User\",\n  \"password\": \"senha123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 400,\n  \"message\": \"EMPLOYEE_LIMIT_EXCEEDED: Plano BASIC permite no máximo 20 funcionários. Atual: 20\",\n  \"error\": \"Bad Request\"\n}"
				}
			]
		},
		{
			"name": "2. Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    const response = pm.response.json();",
							"    pm.collectionVariables.set('access_token', 'Bearer ' + response.access_token);",
							"    pm.collectionVariables.set('user_id', response.user.id);",
							"    console.log('✅ Token updated!');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"test@superpet.com\",\n  \"password\": \"senha123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				},
				"description": "Login with email and password.\n\n**Response:** Returns access_token (JWT)\n\n**Possible Errors:**\n- 401: Invalid credentials (wrong email or password)\n- 401: User is not active"
			},
			"response": [
				{
					"name": "200 - Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@superpet.com\",\n  \"password\": \"senha123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"email\": \"test@superpet.com\",\n    \"name\": \"Test User\",\n    \"organizationId\": \"uuid\"\n  }\n}"
				},
				{
					"name": "401 - Invalid Credentials",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@superpet.com\",\n  \"password\": \"wrongpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid credentials\",\n  \"error\": \"Unauthorized\"\n}"
				}
			]
		},
		{
			"name": "3. Get Profile (Me)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/auth/me",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"me"
					]
				},
				"description": "Get current authenticated user profile.\n\n**Requires:** Valid JWT token in Authorization header\n\n**Possible Errors:**\n- 401: Missing or invalid token\n- 401: Token expired"
			},
			"response": [
				{
					"name": "200 - Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"id\": \"uuid\",\n  \"email\": \"test@superpet.com\",\n  \"name\": \"Test User\",\n  \"organizationId\": \"uuid\",\n  \"status\": \"ACTIVE\",\n  \"createdAt\": \"2025-10-19T00:00:00.000Z\"\n}"
				},
				{
					"name": "401 - Unauthorized (No Token)",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Unauthorized\",\n  \"error\": \"Unauthorized\"\n}"
				},
				{
					"name": "401 - Invalid Token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token_here",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Unauthorized\",\n  \"error\": \"Unauthorized\"\n}"
				}
			]
		},
		{
			"name": "4. Change Password",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"currentPassword\": \"senha123\",\n  \"newPassword\": \"novaSenha456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/change-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"change-password"
					]
				},
				"description": "Change password for authenticated user.\n\n**Requires:** Valid JWT token\n\n**Validations:**\n- Current password must match\n- New password must be different\n- New password minimum 6 characters\n\n**Possible Errors:**\n- 400: Current password is incorrect\n- 400: New password must be different from current\n- 401: Missing or invalid token"
			},
			"response": [
				{
					"name": "200 - Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"senha123\",\n  \"newPassword\": \"novaSenha456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/change-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"change-password"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"message\": \"Password changed successfully\"\n}"
				},
				{
					"name": "400 - Wrong Current Password",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"wrongpassword\",\n  \"newPassword\": \"novaSenha456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/change-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"change-password"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 400,\n  \"message\": \"Current password is incorrect\",\n  \"error\": \"Bad Request\"\n}"
				}
			]
		},
		{
			"name": "5. Forgot Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200 && pm.response.json().token) {",
							"    const response = pm.response.json();",
							"    pm.collectionVariables.set('reset_token', response.token);",
							"    console.log('✅ Reset token saved!');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"test@superpet.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/forgot-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"forgot-password"
					]
				},
				"description": "Request password reset token.\n\n**Security:** Returns generic message even if email doesn't exist\n\n**Development:** Returns token in response (for testing)\n**Production:** Sends token via email\n\n**Token:** 64-character hex string, expires in 1 hour"
			},
			"response": [
				{
					"name": "200 - Success (Dev)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@superpet.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/forgot-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"forgot-password"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"message\": \"Reset token generated\",\n  \"token\": \"abc123def456...\" \n}"
				},
				{
					"name": "200 - Success (Prod)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@superpet.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/forgot-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"forgot-password"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"message\": \"If email exists, reset instructions sent\"\n}"
				}
			]
		},
		{
			"name": "6. Reset Password",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"token\": \"{{reset_token}}\",\n  \"newPassword\": \"novaSenha789\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/reset-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"reset-password"
					]
				},
				"description": "Reset password using token from forgot-password.\n\n**Requirements:**\n- Valid reset token (from email or saved in collection variable)\n- Token not expired (1 hour)\n- Token not already used\n\n**Possible Errors:**\n- 400: Invalid or expired reset token\n- 400: Reset token has expired"
			},
			"response": [
				{
					"name": "200 - Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"abc123def456...\",\n  \"newPassword\": \"novaSenha789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"reset-password"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"message\": \"Password reset successful\"\n}"
				},
				{
					"name": "400 - Invalid Token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"invalid-token\",\n  \"newPassword\": \"novaSenha789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"reset-password"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 400,\n  \"message\": \"Invalid or expired reset token\",\n  \"error\": \"Bad Request\"\n}"
				}
			]
		},
		{
			"name": "7. Refresh Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    const response = pm.response.json();",
							"    pm.collectionVariables.set('access_token', 'Bearer ' + response.access_token);",
							"    console.log('✅ Access token refreshed!');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/refresh",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"refresh"
					]
				},
				"description": "Refresh access token using refresh token.\n\n**Flow:**\n1. Login returns access_token (15min) + refresh_token (7d)\n2. When access_token expires, use refresh_token\n3. Get new access_token without re-login\n\n**Possible Errors:**\n- 401: Invalid refresh token\n- 401: Refresh token expired\n- 401: User not active"
			},
			"response": [
				{
					"name": "200 - Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
				},
				{
					"name": "401 - Invalid Refresh Token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"invalid_token\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid refresh token\",\n  \"error\": \"Unauthorized\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "reset_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		}
	]
}
